#ifndef GMETAD_H
#define GMETAD_H 1 
#include <ganglia/net.h>

/* This was taken from metric_hash.c which was
   generated by gperf */
typedef enum {
   UINT32,
   FLOAT,
   DOUBLE,
} metric_type;

struct ganglia_metric
   {
      const char *name;
      metric_type type;
   };

#define TOTAL_KEYWORDS 30
#define MIN_WORD_LENGTH 6
#define MAX_WORD_LENGTH 13
#define MIN_HASH_VALUE 6
#define MAX_HASH_VALUE 63
/* maximum key range = 58, duplicates = 0 */


/* For xml_hash */
typedef enum {
   GANGLIA_XML_TAG,
   CLUSTER_TAG,
   HOST_TAG,
   NAME_TAG,
   METRIC_TAG,
   TN_TAG,
   TMAX_TAG,
   VAL_TAG,
   TYPE_TAG,
   SLOPE_TAG,
} xml_tag_t;

typedef struct
   {
      unsigned int index;
      char *name;
      unsigned int num_sources;
      g_inet_addr **sources;
   }
data_source_list_t;

typedef union
   {
      float f;
      unsigned int uint32;
      double d;
   }
val_t;

#ifndef SYS_CALL
#define SYS_CALL(RC,SYSCALL) \
   do {                      \
       RC = SYSCALL;         \
   } while (RC < 0 && errno == EINTR);
#endif

#endif
